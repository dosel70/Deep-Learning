{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "67d0437a",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-03T12:39:50.617710Z",
     "iopub.status.busy": "2024-06-03T12:39:50.617434Z",
     "iopub.status.idle": "2024-06-03T12:39:54.507258Z",
     "shell.execute_reply": "2024-06-03T12:39:54.506286Z"
    },
    "papermill": {
     "duration": 3.906271,
     "end_time": "2024-06-03T12:39:54.515651",
     "exception": false,
     "start_time": "2024-06-03T12:39:50.609380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Bulkers/Bulkers_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Submarine/Submarine_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Container Ship/Container Ship_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Aircraft Carrier/Aircraft Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Tug/Tug_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Recreational/Recreational_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Car Carrier/Car Carrier_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/DDG/DDG_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Sailboat/Sailboat_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/valid/Cruise/Cruise_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1065.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1073.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1054.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1041.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1063.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1077.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1042.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1053.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1067.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1062.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1084.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1082.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1079.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1050.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1049.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1055.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1056.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1075.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1080.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1043.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1068.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1070.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1059.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1061.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1081.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1064.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1047.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1072.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1071.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1057.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1083.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1040.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1076.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1078.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1058.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1046.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1052.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1066.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1074.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1051.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1044.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1045.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1060.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Bulkers/Bulkers_1069.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Submarine/Submarine_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Container Ship/Container Ship_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Aircraft Carrier/Aircraft Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Tug/Tug_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1065.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1060.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1064.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1063.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1073.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1040.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1049.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1047.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1057.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1058.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1043.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1053.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1072.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1068.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1069.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1048.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1051.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1042.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1045.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1070.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1052.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1066.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1055.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1046.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1044.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1071.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1067.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1041.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1062.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1061.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1059.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1050.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1054.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1056.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Recreational/Recreational_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Car Carrier/Car Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1049.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1050.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1045.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1048.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1052.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1047.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1059.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1060.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1058.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1057.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1056.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1044.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1041.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1040.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1054.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1042.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1046.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1053.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1055.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1051.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1043.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/DDG/DDG_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1042.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1043.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1040.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1050.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1056.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1048.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1054.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1055.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1049.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1053.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1041.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1058.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1052.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1045.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1059.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1044.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1046.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1057.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1051.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1047.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Sailboat/Sailboat_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Bulkers/Bulkers_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Submarine/Submarine_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_809.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_824.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_822.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_832.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_828.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_808.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_807.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_821.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_819.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_810.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_829.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_814.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_827.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_823.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_811.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_804.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_831.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_816.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_805.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_825.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_806.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_815.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_820.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_818.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_812.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_817.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_826.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_813.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_830.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Container Ship/Container Ship_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Aircraft Carrier/Aircraft Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Tug/Tug_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_894.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_880.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_828.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_875.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_913.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_910.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_898.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_881.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_821.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_914.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_859.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_822.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_868.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_855.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_872.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_823.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_830.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_890.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_829.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_887.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_826.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_916.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_906.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_883.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_846.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_870.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_844.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_877.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_809.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_860.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_858.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_813.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_893.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_819.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_836.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_857.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_896.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_805.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_866.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_917.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_854.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_841.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_871.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_879.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_833.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_808.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_869.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_853.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_845.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_867.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_912.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_831.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_908.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_864.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_806.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_873.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_900.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_886.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_839.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_838.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_848.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_891.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_820.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_842.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_812.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_850.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_915.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_816.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_888.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_804.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_851.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_862.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_874.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_889.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_920.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_909.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_814.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_897.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_824.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_865.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_903.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_810.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_835.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_921.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_885.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_902.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_847.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_882.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_817.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_924.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_876.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_843.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_899.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_807.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_919.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_825.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_863.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_861.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_918.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_907.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_905.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_811.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_901.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_837.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_815.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_884.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_840.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_832.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_892.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_895.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_923.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_911.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_922.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_849.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_852.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_904.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_856.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_834.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_878.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_818.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_827.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Recreational/Recreational_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_972.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_883.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1037.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_846.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_900.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_926.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_843.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_814.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_889.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1010.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_866.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_995.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_820.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_821.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1069.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_928.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_983.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1066.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_977.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_826.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_962.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_992.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_965.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1098.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_971.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_954.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_903.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1088.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1040.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_919.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_844.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_856.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_862.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_833.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_997.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_884.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_986.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_979.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1012.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_914.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_951.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1059.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1023.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_871.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_918.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_874.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_847.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1009.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_853.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1062.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1077.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1034.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_985.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_836.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_860.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_936.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_947.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_924.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_905.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_812.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_805.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_834.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_825.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1030.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_861.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1056.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_969.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1035.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1083.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_858.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_864.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_940.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_818.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_974.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_953.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_823.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_955.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1044.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1017.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_842.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_922.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_938.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_970.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1093.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1064.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_984.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_917.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1060.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1089.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_931.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1006.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_944.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_988.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1004.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_888.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1032.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_872.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1071.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_835.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_867.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_976.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_875.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_930.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1063.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_804.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_982.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_854.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1067.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_925.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_987.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1025.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1038.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_852.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1022.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_885.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_849.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_934.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1065.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1045.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_908.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_892.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1092.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_887.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1087.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1005.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_916.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1007.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1048.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_893.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_968.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_865.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1019.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1081.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_896.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1085.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1003.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1082.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1046.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_990.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1008.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1091.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_973.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_989.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_981.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_950.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1075.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1078.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_906.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1041.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1068.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1036.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_946.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_939.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_816.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1039.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_809.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1014.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_819.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_840.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_904.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_824.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1027.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_831.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_845.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_909.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_882.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_868.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_911.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1015.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_863.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_998.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_890.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1029.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_822.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1096.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1079.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1070.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1026.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1042.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_813.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_959.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_963.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_895.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1051.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_870.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_980.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_902.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_967.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_817.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1095.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_839.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_920.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_991.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_921.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_996.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1072.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_975.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_913.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1047.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1021.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_949.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_897.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_855.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_827.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1055.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_807.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_943.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_910.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_873.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_810.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_880.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_859.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_932.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1000.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_923.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1094.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1099.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_877.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_956.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_957.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_966.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_994.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_993.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_937.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1018.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1016.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1020.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1002.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1001.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1090.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_851.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1033.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_901.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_964.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_848.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_828.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_952.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1086.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1011.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_857.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_999.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1074.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_829.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_838.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_891.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1028.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1080.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_945.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_878.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_960.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_869.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1043.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_942.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1052.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_806.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_837.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_978.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1054.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1058.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_927.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_958.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_815.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_886.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1073.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_894.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_876.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_912.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_879.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_881.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1061.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1097.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1053.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1057.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_811.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1076.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_808.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_898.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1031.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_915.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_850.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_941.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_830.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_832.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_935.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1049.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_929.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1024.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1013.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_961.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_841.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_933.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1084.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_899.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_907.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_948.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1050.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Car Carrier/Car Carrier_1348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_809.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_861.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_819.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_814.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_853.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_816.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_835.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_839.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_840.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_837.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_829.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_817.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_804.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_821.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_828.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_805.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_856.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_808.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_862.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_846.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_842.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_815.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_830.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_851.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_812.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_822.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_859.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_850.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_857.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_824.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_836.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_848.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_818.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_834.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_845.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_490.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_813.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_849.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_847.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_823.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_811.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_863.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_858.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_820.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_832.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_854.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_844.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_833.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_807.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_841.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_827.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_825.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_852.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_810.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_826.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_860.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_843.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_806.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_831.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_855.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_838.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/DDG/DDG_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_904.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_899.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_850.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_849.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_817.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_805.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_894.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_901.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_878.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_801.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_846.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_799.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_800.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_794.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_908.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_830.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_842.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_807.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_786.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_779.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_782.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_781.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_862.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_838.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_787.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_896.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_861.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_813.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_808.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_863.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_853.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_798.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_875.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_873.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_837.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_895.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_810.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_851.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_852.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_820.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_792.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_879.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_797.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_856.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_880.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_818.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_822.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_844.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_780.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_791.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_816.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_785.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_789.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_836.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_811.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_882.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_886.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_867.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_845.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_788.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_859.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_865.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_832.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_848.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_835.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_881.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_854.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_864.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_833.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_841.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_827.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_784.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_815.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_905.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_871.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_888.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_869.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_876.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_900.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_804.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_825.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_897.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_860.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_793.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_847.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_868.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_909.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_893.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_906.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_802.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_872.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_884.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_826.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_898.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_783.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_814.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_823.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_887.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_857.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_809.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_796.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_843.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_883.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_870.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_903.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_803.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_858.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_890.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_885.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_834.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_812.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_806.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_902.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_828.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_819.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_889.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_892.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_831.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_874.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_829.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_866.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_790.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_877.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_840.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_821.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_839.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_855.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_795.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_824.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_907.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_891.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Sailboat/Sailboat_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_511.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_447.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_323.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_92.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_357.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_745.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_135.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_286.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_546.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_127.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_487.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_532.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_191.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_173.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_719.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_639.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_593.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_420.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_113.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_383.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_551.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_337.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_319.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_756.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_741.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_73.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_643.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_519.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_77.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_17.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_391.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_428.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_378.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_261.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_520.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_11.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_376.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_747.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_153.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_242.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_257.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_759.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_493.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_67.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_724.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_36.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_136.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_344.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_186.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_51.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_299.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_381.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_294.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_66.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_374.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_363.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_439.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_126.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_347.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_400.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_343.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_670.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_673.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_579.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_64.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_387.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_39.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_298.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_227.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_225.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_395.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_708.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_288.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_70.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_172.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_416.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_235.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_609.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_327.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_598.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_672.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_48.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_554.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_571.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_123.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_160.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_427.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_700.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_158.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_108.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_335.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_211.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_663.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_544.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_575.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_541.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_352.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_26.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_8.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_653.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_409.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_405.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_117.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_199.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_100.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_171.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_392.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_85.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_317.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_156.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_81.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_464.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_215.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_612.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_169.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_46.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_140.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_561.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_678.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_82.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_668.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_727.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_291.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_434.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_198.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_106.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_306.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_566.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_361.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_702.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_190.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_696.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_163.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_111.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_753.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_475.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_698.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_614.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_24.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_472.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_687.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_296.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_437.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_134.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_650.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_737.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_366.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_771.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_295.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_154.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_15.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_27.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_588.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_694.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_626.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_761.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_50.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_95.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_645.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_147.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_321.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_240.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_10.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_47.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_456.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_659.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_522.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_418.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_509.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_362.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_661.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_25.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_471.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_658.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_293.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_636.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_591.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_141.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_655.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_195.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_128.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_757.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_720.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_4.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_506.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_580.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_270.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_716.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_606.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_265.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_699.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_290.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_340.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_88.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_241.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_137.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_467.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_649.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_553.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_308.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_468.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_74.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_348.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_371.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_255.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_194.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_547.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_101.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_61.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_706.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_212.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_150.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_370.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_120.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_603.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_97.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_159.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_216.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_445.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_303.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_473.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_495.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_63.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_608.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_767.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_438.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_116.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_500.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_232.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_501.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_415.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_53.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_30.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_568.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_94.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_148.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_105.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_272.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_404.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_368.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_443.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_452.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_664.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_535.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_69.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_760.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_461.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_476.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_133.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_707.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_512.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_505.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_638.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_435.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_644.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_99.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_722.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_176.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_230.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_458.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_635.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_766.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_479.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_618.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_577.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_49.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_773.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_210.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_728.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_75.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_714.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_460.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_1.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_382.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_734.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_231.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_307.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_301.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_52.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_282.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_256.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_538.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_78.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_373.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_709.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_524.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_399.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_59.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_686.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_197.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_274.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_565.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_432.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_130.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_177.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_218.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_9.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_540.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_174.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_219.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_109.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_32.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_122.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_570.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_731.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_260.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_220.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_462.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_189.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_765.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_289.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_733.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_595.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_155.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_132.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_118.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_769.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_205.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_689.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_675.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_419.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_228.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_550.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_284.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_102.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_223.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_557.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_742.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_516.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_313.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_587.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_528.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_690.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_329.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_613.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_739.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_572.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_201.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_385.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_730.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_726.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_412.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_596.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_633.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_139.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_629.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_56.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_555.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_196.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_718.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_38.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_87.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_221.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_620.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_322.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_254.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_562.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_12.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_234.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_624.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_121.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_68.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_107.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_631.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_131.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_425.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_149.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_611.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_372.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_648.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_569.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_600.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_175.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_2.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_642.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_627.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_62.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_333.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_478.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_451.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_674.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_330.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_496.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_556.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_44.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_143.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_281.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_582.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_28.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_564.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_474.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_594.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_316.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_278.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_388.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_514.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_119.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_441.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_206.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_482.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_470.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_280.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_181.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_534.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_477.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_125.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_91.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_667.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_533.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_682.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_22.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_449.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_548.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_354.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_529.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_527.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_738.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_430.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_715.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_237.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_346.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_276.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_704.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_507.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_203.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_202.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_192.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_662.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_23.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_379.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_145.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_170.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_341.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_86.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_277.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_328.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_19.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_112.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_245.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_353.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_167.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_311.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_226.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_751.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_325.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_552.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_513.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_466.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_380.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_238.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_386.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_58.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_142.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_576.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_423.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_413.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_688.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_180.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_224.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_486.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_114.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_530.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_204.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_305.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_41.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_37.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_683.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_345.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_259.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_489.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_243.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_732.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_6.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_426.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_342.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_165.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_774.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_778.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_628.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_414.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_273.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_184.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_444.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_450.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_488.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_491.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_208.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_517.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_151.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_589.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_431.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_13.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_599.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_641.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_525.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_654.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_42.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_676.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_34.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_448.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_359.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_29.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_217.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_492.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_723.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_584.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_115.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_367.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_339.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_623.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_360.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_54.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_45.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_433.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_164.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_497.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_691.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_365.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_640.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_692.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_494.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_403.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_300.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_331.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_502.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_632.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_660.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_350.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_312.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_436.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_758.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_705.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_590.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_560.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_585.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_326.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_283.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_20.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_422.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_336.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_200.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_207.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_351.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_40.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_65.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_57.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_652.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_665.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_271.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_481.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_16.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_549.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_776.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_349.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_531.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_324.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_166.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_515.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_332.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_398.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_249.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_619.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_558.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_410.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_625.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_701.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_152.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_233.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_754.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_455.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_253.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_693.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_269.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_602.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_18.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_510.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_33.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_424.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_248.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_763.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_60.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_666.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_90.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_263.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_647.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_586.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_209.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_526.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_315.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_14.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_406.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_31.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_453.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_396.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_521.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_465.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_310.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_485.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_35.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_79.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_671.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_454.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_573.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_721.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_463.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_717.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_583.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_504.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_138.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_98.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_252.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_129.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_621.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_597.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_755.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_446.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_615.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_429.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_397.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_89.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_634.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_622.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_320.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_459.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_84.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_83.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_146.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_7.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_630.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_616.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_214.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_711.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_743.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_96.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_713.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_314.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_375.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_725.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_729.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_735.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_264.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_764.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_601.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_518.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_178.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_318.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_637.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_408.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_563.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_183.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_355.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_651.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_364.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_752.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_545.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_222.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_442.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_161.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_93.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_744.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_574.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_677.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_267.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_440.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_297.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_393.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_536.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_358.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_523.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_244.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_499.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_389.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_377.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_103.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_250.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_144.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_567.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_578.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_43.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_710.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_656.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_542.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_110.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_193.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_80.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_746.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_617.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_285.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_246.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_384.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_604.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_251.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_749.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_292.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_104.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_646.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_188.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_55.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_703.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_279.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_607.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_684.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_76.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_581.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_484.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_309.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_407.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_275.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_592.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_239.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_770.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_736.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_411.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_669.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_695.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_483.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_262.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_777.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_157.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_394.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_537.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_390.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_559.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_356.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_338.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_168.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_748.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_266.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_268.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_421.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_712.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_229.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_3.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_258.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_213.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_508.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_71.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_187.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_469.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_287.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_768.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_685.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_302.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_657.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_179.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_401.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_750.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_304.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_72.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_740.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_162.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_480.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_369.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_772.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_182.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_457.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_185.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_762.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_681.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_543.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_124.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_21.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_236.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_605.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_679.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_5.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_539.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_680.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_503.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_402.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_610.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_334.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_775.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_247.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_697.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_498.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_417.jpeg\n",
      "/kaggle/input/ship-classification-dataset/ships_dataset/train/Cruise/Cruise_490.jpeg\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "29979a51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:39:54.571088Z",
     "iopub.status.busy": "2024-06-03T12:39:54.570706Z",
     "iopub.status.idle": "2024-06-03T12:40:06.799995Z",
     "shell.execute_reply": "2024-06-03T12:40:06.798889Z"
    },
    "papermill": {
     "duration": 12.254358,
     "end_time": "2024-06-03T12:40:06.801958",
     "exception": false,
     "start_time": "2024-06-03T12:39:54.547600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-03 12:39:56.359128: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-03 12:39:56.359222: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-03 12:39:56.477873: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 8534 images belonging to 10 classes.\n",
      "{'Aircraft Carrier': 0, 'Bulkers': 1, 'Car Carrier': 2, 'Container Ship': 3, 'Cruise': 4, 'DDG': 5, 'Recreational': 6, 'Sailboat': 7, 'Submarine': 8, 'Tug': 9}\n"
     ]
    }
   ],
   "source": [
    "from glob import glob\n",
    "import os\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "\n",
    "root = '/kaggle/input/ship-classification-dataset/ships_dataset/train'\n",
    "\n",
    "idg = ImageDataGenerator(rescale=1./255)\n",
    "\n",
    "generator = idg.flow_from_directory(root, target_size=(150, 150), batch_size=32, class_mode='categorical')\n",
    "print(generator.class_indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "57c93836",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:06.846741Z",
     "iopub.status.busy": "2024-06-03T12:40:06.846210Z",
     "iopub.status.idle": "2024-06-03T12:40:07.216949Z",
     "shell.execute_reply": "2024-06-03T12:40:07.215910Z"
    },
    "papermill": {
     "duration": 0.39518,
     "end_time": "2024-06-03T12:40:07.218865",
     "exception": false,
     "start_time": "2024-06-03T12:40:06.823685",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 8534 images belonging to 10 classes.\n",
      "Found 781 images belonging to 10 classes.\n",
      "Found 689 images belonging to 10 classes.\n",
      "{'Aircraft Carrier': 0, 'Bulkers': 1, 'Car Carrier': 2, 'Container Ship': 3, 'Cruise': 4, 'DDG': 5, 'Recreational': 6, 'Sailboat': 7, 'Submarine': 8, 'Tug': 9}\n",
      "{'Aircraft Carrier': 0, 'Bulkers': 1, 'Car Carrier': 2, 'Container Ship': 3, 'Cruise': 4, 'DDG': 5, 'Recreational': 6, 'Sailboat': 7, 'Submarine': 8, 'Tug': 9}\n",
      "{'Aircraft Carrier': 0, 'Bulkers': 1, 'Car Carrier': 2, 'Container Ship': 3, 'Cruise': 4, 'DDG': 5, 'Recreational': 6, 'Sailboat': 7, 'Submarine': 8, 'Tug': 9}\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras.applications.densenet import preprocess_input\n",
    "\n",
    "IMAGE_SIZE = 224\n",
    "BATCH_SIZE = 32\n",
    "\n",
    "idg = ImageDataGenerator(preprocessing_function=preprocess_input)\n",
    "\n",
    "train_dir = '/kaggle/input/ship-classification-dataset/ships_dataset/train'\n",
    "validation_dir = '/kaggle/input/ship-classification-dataset/ships_dataset/valid'\n",
    "test_dir = '/kaggle/input/ship-classification-dataset/ships_dataset/test'\n",
    "\n",
    "train_generator = idg.flow_from_directory(train_dir,\n",
    "                                         target_size=(IMAGE_SIZE, IMAGE_SIZE),\n",
    "                                         batch_size=BATCH_SIZE,\n",
    "                                         class_mode='categorical',\n",
    "                                         shuffle=True)\n",
    "\n",
    "test_generator = idg.flow_from_directory(test_dir,\n",
    "                                         target_size=(IMAGE_SIZE, IMAGE_SIZE),\n",
    "                                         batch_size=BATCH_SIZE,\n",
    "                                         class_mode='categorical')\n",
    "\n",
    "validation_generator = idg.flow_from_directory(validation_dir,\n",
    "                                              target_size=(IMAGE_SIZE, IMAGE_SIZE),\n",
    "                                              batch_size=BATCH_SIZE,\n",
    "                                              class_mode='categorical')\n",
    "\n",
    "print(train_generator.class_indices)\n",
    "print(validation_generator.class_indices)\n",
    "print(test_generator.class_indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0665f0ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:07.264224Z",
     "iopub.status.busy": "2024-06-03T12:40:07.263911Z",
     "iopub.status.idle": "2024-06-03T12:40:07.270951Z",
     "shell.execute_reply": "2024-06-03T12:40:07.270151Z"
    },
    "papermill": {
     "duration": 0.031926,
     "end_time": "2024-06-03T12:40:07.272901",
     "exception": false,
     "start_time": "2024-06-03T12:40:07.240975",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: 'Aircraft Carrier',\n",
       " 1: 'Bulkers',\n",
       " 2: 'Car Carrier',\n",
       " 3: 'Container Ship',\n",
       " 4: 'Cruise',\n",
       " 5: 'DDG',\n",
       " 6: 'Recreational',\n",
       " 7: 'Sailboat',\n",
       " 8: 'Submarine',\n",
       " 9: 'Tug'}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_name = {v:k for k, v in train_generator.class_indices.items()}\n",
    "target_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7ca3b231",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:07.316920Z",
     "iopub.status.busy": "2024-06-03T12:40:07.316651Z",
     "iopub.status.idle": "2024-06-03T12:40:07.350907Z",
     "shell.execute_reply": "2024-06-03T12:40:07.350043Z"
    },
    "papermill": {
     "duration": 0.058545,
     "end_time": "2024-06-03T12:40:07.352819",
     "exception": false,
     "start_time": "2024-06-03T12:40:07.294274",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8534 781 689\n"
     ]
    }
   ],
   "source": [
    "train_target_names = []\n",
    "test_target_names = []\n",
    "validation_target_names = []\n",
    "\n",
    "for target in train_generator.classes : \n",
    "    train_target_names.append(target_name[target])\n",
    "    \n",
    "for target in test_generator.classes : \n",
    "    test_target_names.append(target_name[target])\n",
    "\n",
    "for target in validation_generator.classes : \n",
    "    validation_target_names.append(target_name[target])\n",
    "    \n",
    "print(len(train_target_names), len(test_target_names), len(validation_target_names))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "86b5978b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:07.397643Z",
     "iopub.status.busy": "2024-06-03T12:40:07.396896Z",
     "iopub.status.idle": "2024-06-03T12:40:07.443353Z",
     "shell.execute_reply": "2024-06-03T12:40:07.442537Z"
    },
    "papermill": {
     "duration": 0.071039,
     "end_time": "2024-06-03T12:40:07.445246",
     "exception": false,
     "start_time": "2024-06-03T12:40:07.374207",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_paths</th>\n",
       "      <th>target_names</th>\n",
       "      <th>targets</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8529</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8530</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8531</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8532</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8533</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8534 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             file_paths      target_names  \\\n",
       "0     /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "1     /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "2     /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "3     /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "4     /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "...                                                 ...               ...   \n",
       "8529  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "8530  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "8531  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "8532  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "8533  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "\n",
       "      targets  \n",
       "0           0  \n",
       "1           0  \n",
       "2           0  \n",
       "3           0  \n",
       "4           0  \n",
       "...       ...  \n",
       "8529        9  \n",
       "8530        9  \n",
       "8531        9  \n",
       "8532        9  \n",
       "8533        9  \n",
       "\n",
       "[8534 rows x 3 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_paths</th>\n",
       "      <th>target_name</th>\n",
       "      <th>targets</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>684</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>685</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>686</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>687</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>688</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>689 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            file_paths       target_name  \\\n",
       "0    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "1    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "2    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "3    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "4    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "..                                                 ...               ...   \n",
       "684  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "685  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "686  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "687  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "688  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "\n",
       "     targets  \n",
       "0          0  \n",
       "1          0  \n",
       "2          0  \n",
       "3          0  \n",
       "4          0  \n",
       "..       ...  \n",
       "684        9  \n",
       "685        9  \n",
       "686        9  \n",
       "687        9  \n",
       "688        9  \n",
       "\n",
       "[689 rows x 3 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_paths</th>\n",
       "      <th>target_names</th>\n",
       "      <th>targets</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Aircraft Carrier</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>776</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>777</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>778</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>779</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>780</th>\n",
       "      <td>/kaggle/input/ship-classification-dataset/ship...</td>\n",
       "      <td>Tug</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>781 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            file_paths      target_names  \\\n",
       "0    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "1    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "2    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "3    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "4    /kaggle/input/ship-classification-dataset/ship...  Aircraft Carrier   \n",
       "..                                                 ...               ...   \n",
       "776  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "777  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "778  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "779  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "780  /kaggle/input/ship-classification-dataset/ship...               Tug   \n",
       "\n",
       "     targets  \n",
       "0          0  \n",
       "1          0  \n",
       "2          0  \n",
       "3          0  \n",
       "4          0  \n",
       "..       ...  \n",
       "776        9  \n",
       "777        9  \n",
       "778        9  \n",
       "779        9  \n",
       "780        9  \n",
       "\n",
       "[781 rows x 3 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "train_df = pd.DataFrame({'file_paths' : train_generator.filepaths, \n",
    "                         'target_names' : train_target_names,\n",
    "                        'targets' : train_generator.classes})\n",
    "train_df.file_paths = train_df.file_paths.apply(lambda file_path: file_path.replace('\\\\', '/'))\n",
    "\n",
    "\n",
    "test_df = pd.DataFrame({'file_paths' : test_generator.filepaths,\n",
    "                       'target_names' : test_target_names,\n",
    "                       'targets' : test_generator.classes})\n",
    "test_df.file_paths = test_df.file_paths.apply(lambda file_path: file_path.replace('\\\\', '/'))\n",
    "\n",
    "\n",
    "validation_df = pd.DataFrame({'file_paths' : validation_generator.filepaths,\n",
    "                             'target_name' : validation_target_names,\n",
    "                             'targets' : validation_generator.classes})\n",
    "validation_df.file_paths = validation_df.file_paths.apply(lambda file_path: file_path.replace('\\\\', '/'))\n",
    "\n",
    "\n",
    "display(train_df)\n",
    "display(validation_df)\n",
    "display(test_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "46895559",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:07.491799Z",
     "iopub.status.busy": "2024-06-03T12:40:07.491528Z",
     "iopub.status.idle": "2024-06-03T12:40:07.953979Z",
     "shell.execute_reply": "2024-06-03T12:40:07.953053Z"
    },
    "papermill": {
     "duration": 0.489614,
     "end_time": "2024-06-03T12:40:07.957430",
     "exception": false,
     "start_time": "2024-06-03T12:40:07.467816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import cv2\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "image = cv2.cvtColor(cv2.imread(train_df.file_paths.iloc[2000]), cv2.COLOR_BGR2RGB)\n",
    "plt.imshow(image)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c1cba404",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:08.013658Z",
     "iopub.status.busy": "2024-06-03T12:40:08.012867Z",
     "iopub.status.idle": "2024-06-03T12:40:08.017706Z",
     "shell.execute_reply": "2024-06-03T12:40:08.016913Z"
    },
    "papermill": {
     "duration": 0.034983,
     "end_time": "2024-06-03T12:40:08.019929",
     "exception": false,
     "start_time": "2024-06-03T12:40:07.984946",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8534, 3)\n",
      "(689, 3)\n",
      "(781, 3)\n"
     ]
    }
   ],
   "source": [
    "print(train_df.shape)\n",
    "print(validation_df.shape)\n",
    "print(test_df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "80579bf3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:08.073574Z",
     "iopub.status.busy": "2024-06-03T12:40:08.073312Z",
     "iopub.status.idle": "2024-06-03T12:40:08.939409Z",
     "shell.execute_reply": "2024-06-03T12:40:08.938448Z"
    },
    "papermill": {
     "duration": 0.895765,
     "end_time": "2024-06-03T12:40:08.941779",
     "exception": false,
     "start_time": "2024-06-03T12:40:08.046014",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from tensorflow.keras.utils import Sequence\n",
    "from sklearn.utils import shuffle\n",
    "import cv2\n",
    "\n",
    "\n",
    "\n",
    "# keras.utils에서 import한 Sequence를 상속받은 Dataset 라는 클래스를 정의 한다.\n",
    "class Dataset(Sequence):\n",
    "    # 데이터셋 객체를 초기화 하는 메서드 __init__\n",
    "    def __init__(self, file_paths, targets, batch_size=BATCH_SIZE, aug=None, shuffle=False):\n",
    "        \n",
    "        # file_paths : 이미지 파일 경로의 리스트\n",
    "        self.file_paths = file_paths\n",
    "        \n",
    "        # 각 이미지에 대한 타겟 리스트\n",
    "        self.targets = targets\n",
    "        \n",
    "        # 한 배치당 데이터의 개수 \n",
    "        self.batch_size = batch_size\n",
    "        \n",
    "        # 증강을 위한 객체\n",
    "        self.aug = aug\n",
    "        \n",
    "        # 데이터 섞을 지 여부\n",
    "        self.shuffle = shuffle\n",
    "        \n",
    "        # 만일 Shuffle이 True라면, on_epoch_end 메서드를 호출하여 데이터를 섞는다.\n",
    "        if self.shuffle:\n",
    "            \n",
    "            # 에포크 종료 시, 객체 생성 및 데이터 섞기\n",
    "            self.on_epoch_end()\n",
    "\n",
    "    # __len__()는 전체 데이터 건수에서 batch_size 단위로 나눈 데이터 수\n",
    "    # 예를 들어, 1000개의 데이터를 30 batch_size로 설정하면, 1 batch당 33.33..개이다.\n",
    "    # 이 때, 소수점은 무조건 올려서 33 + 1 = 34개로 설정한다.\n",
    "    # 즉 __len__ 메서드는 전체 데이터셋을 배치 크기로 나눈 배치의 수를 반환한다.\n",
    "    def __len__(self):\n",
    "        \n",
    "        # ceil --> 반올림 함수 \n",
    "        return int(np.ceil(len(self.targets) / self.batch_size))\n",
    "\n",
    "    # batch_size 단위로 이미지 배열과 타켓 데이터들을 가져온 뒤 변환한 값을 리턴한다.\n",
    "    # __getitem__ 메서드는 특정 인덱스에 해당하는 배치 데이터를 반환 \n",
    "    def __getitem__(self, index):\n",
    "        \n",
    "        # 주어진 인덱스에 해당하는 배치의 파일 경로 리스트 가져옴\n",
    "        file_paths_batch = self.file_paths[index * self.batch_size: (index + 1) * self.batch_size]\n",
    "        \n",
    "        # 주어진 인덱스에 해당하는 배치의 타겟 리스트를 가져옴 \n",
    "        targets_batch = self.targets[index * self.batch_size: (index + 1) * self.batch_size]\n",
    "        \n",
    "        # 결과 이미지를 저장할 리스트를 초기화, 배치 크기나 이미지 크기, 이미지 채널 수 등이 있다.\n",
    "        results_batch = np.zeros((file_paths_batch.shape[0], IMAGE_SIZE, IMAGE_SIZE, 3))\n",
    "        \n",
    "        # 배치의 각 이미지 파일 경로에 대해 반복\n",
    "        for i in range(file_paths_batch.shape[0]):\n",
    "            \n",
    "            # 이미지를 읽고 BGR에서 RGB로 색상 변환\n",
    "            image = cv2.cvtColor(cv2.imread(file_paths_batch[i]), cv2.COLOR_BGR2RGB)\n",
    "            \n",
    "            # 이미지를 지정된 크기로 리사이즈\n",
    "            image = cv2.resize(image, (IMAGE_SIZE, IMAGE_SIZE))\n",
    "            \n",
    "            # Augmentation 객체가 있으면, 데이터 증강을 수행한다.\n",
    "            if self.aug is not None:\n",
    "                \n",
    "                image = self.aug(image=image)['image']\n",
    "                \n",
    "            # 변환된 이미지를 결과 리스트에 저장 --> results_batch[i]\n",
    "            results_batch[i] = image\n",
    "            \n",
    "         # 변환된 이미지 배치와 타겟 배치를 반환\n",
    "        return results_batch, targets_batch\n",
    "        \n",
    "    def on_epoch_end(self):\n",
    "        \n",
    "         # 셔플이 True인 경우, 파일 경로와 타겟을 섞는다.\n",
    "        if self.shuffle:\n",
    "            self.file_paths, self.targets = shuffle(self.file_paths, self.targets)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "07f25e0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:08.997197Z",
     "iopub.status.busy": "2024-06-03T12:40:08.996868Z",
     "iopub.status.idle": "2024-06-03T12:40:09.368970Z",
     "shell.execute_reply": "2024-06-03T12:40:09.368187Z"
    },
    "papermill": {
     "duration": 0.402749,
     "end_time": "2024-06-03T12:40:09.371249",
     "exception": false,
     "start_time": "2024-06-03T12:40:08.968500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import albumentations as A\n",
    "\n",
    "train_file_paths = train_df['file_paths'].values\n",
    "train_targets = train_df['targets'].values\n",
    "\n",
    "aug = A.Compose([\n",
    "    A.ShiftScaleRotate(p=0.5),\n",
    "    A.HorizontalFlip(p=0.5),\n",
    "    A.RandomBrightnessContrast(brightness_limit=0.2, contrast_limit=0.2, p=0.5)\n",
    "])\n",
    "\n",
    "dataset = Dataset(train_file_paths, train_targets, batch_size=BATCH_SIZE, aug=aug, shuffle=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8e32282a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:09.425579Z",
     "iopub.status.busy": "2024-06-03T12:40:09.424331Z",
     "iopub.status.idle": "2024-06-03T12:40:09.436668Z",
     "shell.execute_reply": "2024-06-03T12:40:09.435933Z"
    },
    "papermill": {
     "duration": 0.040816,
     "end_time": "2024-06-03T12:40:09.438577",
     "exception": false,
     "start_time": "2024-06-03T12:40:09.397761",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from tensorflow.keras.utils import Sequence\n",
    "from sklearn.utils import shuffle\n",
    "import cv2\n",
    "\n",
    "\n",
    "class Dataset(Sequence):\n",
    "    def __init__(self, file_paths, targets, batch_size=BATCH_SIZE, aug=None, preprocess=None, shuffle=False):\n",
    "        self.file_paths = file_paths\n",
    "        self.targets = targets\n",
    "        self.batch_size = batch_size\n",
    "        self.aug = aug\n",
    "        self.preprocess = preprocess\n",
    "        self.shuffle = shuffle\n",
    "\n",
    "        if self.shuffle:\n",
    "            # 에포크 종료 시, 객체 생성 및 데이터 섞기\n",
    "            self.on_epoch_end()\n",
    "\n",
    "    # __len__()는 전체 데이터 건수에서 batch_size 단위로 나눈 데이터 수\n",
    "    # 예를 들어, 1000개의 데이터를 30 batch_size로 설정하면, 1 batch당 33.33..개이다.\n",
    "    # 이 때, 소수점은 무조건 올려서 33 + 1 = 34개로 설정한다.\n",
    "    def __len__(self):\n",
    "        return int(np.ceil(len(self.targets) / self.batch_size))\n",
    "\n",
    "    # batch_size 단위로 이미지 배열과 타켓 데이터들을 가져온 뒤 변환한 값을 리턴한다.\n",
    "    def __getitem__(self, index):\n",
    "        file_paths_batch = self.file_paths[index * self.batch_size: (index + 1) * self.batch_size]\n",
    "        targets_batch = self.targets[index * self.batch_size: (index + 1) * self.batch_size]\n",
    "\n",
    "        results_batch = np.zeros((file_paths_batch.shape[0], IMAGE_SIZE, IMAGE_SIZE, 3))\n",
    "\n",
    "        for i in range(file_paths_batch.shape[0]):\n",
    "            image = cv2.cvtColor(cv2.imread(file_paths_batch[i]), cv2.COLOR_BGR2RGB)\n",
    "            image = cv2.resize(image, (IMAGE_SIZE, IMAGE_SIZE))\n",
    "\n",
    "            if self.aug is not None:\n",
    "                image = self.aug(image=image)['image']\n",
    "\n",
    "            if self.preprocess is not None:\n",
    "                image = self.preprocess(image)\n",
    "                    \n",
    "            results_batch[i] = image\n",
    "\n",
    "        return results_batch, targets_batch\n",
    "        \n",
    "    def on_epoch_end(self):\n",
    "        if self.shuffle:\n",
    "            self.file_paths, self.targets = shuffle(self.file_paths, self.targets)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b039980f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:09.491787Z",
     "iopub.status.busy": "2024-06-03T12:40:09.490964Z",
     "iopub.status.idle": "2024-06-03T12:40:09.506969Z",
     "shell.execute_reply": "2024-06-03T12:40:09.506010Z"
    },
    "papermill": {
     "duration": 0.044245,
     "end_time": "2024-06-03T12:40:09.508833",
     "exception": false,
     "start_time": "2024-06-03T12:40:09.464588",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import albumentations as A\n",
    "from tensorflow.keras.applications.xception import preprocess_input as xception_preprocess_input\n",
    "\n",
    "train_file_paths = train_df['file_paths'].values\n",
    "# train_targets = train_df['targets'].values # SparseCategoricalCrossEntropy\n",
    "train_targets = pd.get_dummies(train_df['targets']).values # CategoricalCrossEntropy\n",
    "\n",
    "validation_file_paths = validation_df['file_paths'].values\n",
    "# validation_targets = validation_df['targets'].values # SparseCategoricalCrossEntropy\n",
    "validation_targets = pd.get_dummies(validation_df['targets']).values # CategoricalCrossEntropy\n",
    "\n",
    "test_file_paths = test_df['file_paths'].values\n",
    "# test_targets = test_df['targets'].values # SparseCategoricalCrossEntropy\n",
    "test_targets = pd.get_dummies(test_df['targets']).values # CategoricalCrossEntropy\n",
    "\n",
    "aug = A.Compose([\n",
    "    A.ShiftScaleRotate(p=0.5),\n",
    "    A.HorizontalFlip(p=0.5),\n",
    "    A.RandomBrightnessContrast(brightness_limit=0.2, contrast_limit=0, p=0.5)\n",
    "])\n",
    "\n",
    "train_dataset = Dataset(train_file_paths, \n",
    "                        train_targets, \n",
    "                        batch_size=BATCH_SIZE, \n",
    "                        aug=aug, \n",
    "                        preprocess=xception_preprocess_input, \n",
    "                        shuffle=True)\n",
    "\n",
    "validation_dataset = Dataset(validation_file_paths, \n",
    "                        validation_targets, \n",
    "                        batch_size=BATCH_SIZE, \n",
    "                        preprocess=xception_preprocess_input)\n",
    "\n",
    "test_dataset = Dataset(test_file_paths, \n",
    "                        test_targets, \n",
    "                        batch_size=BATCH_SIZE, \n",
    "                        preprocess=xception_preprocess_input)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1e605f59",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:09.560599Z",
     "iopub.status.busy": "2024-06-03T12:40:09.560313Z",
     "iopub.status.idle": "2024-06-03T12:40:09.575578Z",
     "shell.execute_reply": "2024-06-03T12:40:09.574714Z"
    },
    "papermill": {
     "duration": 0.043189,
     "end_time": "2024-06-03T12:40:09.577411",
     "exception": false,
     "start_time": "2024-06-03T12:40:09.534222",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.layers import Input, Dense , Conv2D , Dropout , Flatten , Activation, MaxPooling2D , GlobalAveragePooling2D\n",
    "from tensorflow.keras.layers import BatchNormalization\n",
    "\n",
    "from tensorflow.keras.applications.vgg16 import VGG16\n",
    "from tensorflow.keras.applications import ResNet50V2\n",
    "from tensorflow.keras.applications import Xception\n",
    "from tensorflow.keras.applications import MobileNetV2\n",
    "\n",
    "def create_model(model_name='vgg16', verbose=False):\n",
    "    input_tensor = Input(shape=(IMAGE_SIZE, IMAGE_SIZE, 3))\n",
    "    if model_name == 'vgg16':\n",
    "        model = VGG16(input_tensor=input_tensor, include_top=False, weights='imagenet')\n",
    "    elif model_name == 'resnet50': # ResNet50, 74.9% ; ResNet50V2, 76.0%\n",
    "        model = ResNet50V2(input_tensor=input_tensor, include_top=False, weights='imagenet')\n",
    "    elif model_name == 'xception': # Inception을 기초로 한 모델\n",
    "        model = Xception(input_tensor=input_tensor, include_top=False, weights='imagenet')\n",
    "    elif model_name == 'mobilenet':\n",
    "        model = MobileNetV2(input_tensor=input_tensor, include_top=False, weights='imagenet')\n",
    "\n",
    "    x = model.output\n",
    "\n",
    "    # 분류기\n",
    "    x = GlobalAveragePooling2D()(x)\n",
    "    if model_name != 'vgg16':\n",
    "        x = Dropout(rate=0.5)(x)\n",
    "    x = Dense(50, activation='relu')(x)\n",
    "    x = Dropout(rate=0.5)(x)\n",
    "    if model_name != 'vgg16':\n",
    "        x = Dropout(rate=0.5)(x)\n",
    "    output = Dense(10, activation='softmax', name='output')(x)\n",
    "    \n",
    "    model = Model(inputs=input_tensor, outputs=output)\n",
    "    \n",
    "    if verbose:\n",
    "        model.summary()\n",
    "    \n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "595405c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:09.628865Z",
     "iopub.status.busy": "2024-06-03T12:40:09.628614Z",
     "iopub.status.idle": "2024-06-03T12:40:12.745594Z",
     "shell.execute_reply": "2024-06-03T12:40:12.744849Z"
    },
    "papermill": {
     "duration": 3.144822,
     "end_time": "2024-06-03T12:40:12.747409",
     "exception": false,
     "start_time": "2024-06-03T12:40:09.602587",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_24/3009578922.py:19: UserWarning: `input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n",
      "  model = MobileNetV2(input_tensor=input_tensor, include_top=False, weights='imagenet')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_224_no_top.h5\n",
      "\u001b[1m9406464/9406464\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 0us/step\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_1\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"functional_1\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
       "│ input_layer         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">864</span> │ input_layer[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ bn_Conv1            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │ Conv1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv1_relu (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ bn_Conv1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">288</span> │ Conv1_relu[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]  │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │ expanded_conv_de… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ expanded_conv_de… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_proj… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ expanded_conv_de… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_proj… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │         <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span> │ expanded_conv_pr… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ expanded_conv_pr… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │ block_1_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_1_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_pad         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">113</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">113</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_1_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ZeroPadding2D</span>)     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">864</span> │ block_1_pad[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │ block_1_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_1_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_1_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │         <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span> │ block_1_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_1_project_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span> │ block_2_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_2_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,296</span> │ block_2_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span> │ block_2_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_2_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_2_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │         <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span> │ block_2_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_1_project_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>)               │            │ block_2_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_2_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span> │ block_3_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_3_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_pad         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">57</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">57</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_3_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ZeroPadding2D</span>)     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,296</span> │ block_3_pad[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span> │ block_3_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_3_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">4,608</span> │ block_3_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │ block_3_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">6,144</span> │ block_3_project_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_4_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_4_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,728</span> │ block_4_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_4_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_4_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">6,144</span> │ block_4_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │ block_4_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_3_project_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │ block_4_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">6,144</span> │ block_4_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_5_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_5_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,728</span> │ block_5_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_5_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_5_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">6,144</span> │ block_5_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │ block_5_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_4_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)               │            │ block_5_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">6,144</span> │ block_5_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_6_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_6_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_pad         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">29</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">29</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_6_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ZeroPadding2D</span>)     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,728</span> │ block_6_pad[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span> │ block_6_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_6_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">12,288</span> │ block_6_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ block_6_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_6_project_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_7_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_7_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_7_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_7_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_7_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_7_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ block_7_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_6_project_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │ block_7_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_7_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_8_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_8_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_8_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_8_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_8_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_8_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ block_8_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_7_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │ block_8_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_8_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand_BN   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_9_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand_relu │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_9_expand_B… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_9_expand_r… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_9_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise_… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_9_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_project     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_9_depthwis… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_project_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ block_9_project[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_8_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │ block_9_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">24,576</span> │ block_9_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_10_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_10_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,456</span> │ block_10_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,536</span> │ block_10_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_10_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">36,864</span> │ block_10_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │ block_10_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">55,296</span> │ block_10_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_11_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_11_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">5,184</span> │ block_11_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_11_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_11_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">55,296</span> │ block_11_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │ block_11_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_10_project… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │ block_11_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">55,296</span> │ block_11_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_12_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_12_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">5,184</span> │ block_12_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_12_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_12_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">55,296</span> │ block_12_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │ block_12_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_11_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)               │            │ block_12_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">55,296</span> │ block_12_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_13_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_13_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_pad        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_13_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ZeroPadding2D</span>)     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">5,184</span> │ block_13_pad[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,304</span> │ block_13_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">576</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_13_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │     <span style=\"color: #00af00; text-decoration-color: #00af00\">92,160</span> │ block_13_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │        <span style=\"color: #00af00; text-decoration-color: #00af00\">640</span> │ block_13_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">153,600</span> │ block_13_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_14_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_14_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">8,640</span> │ block_14_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_14_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_14_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">153,600</span> │ block_14_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │        <span style=\"color: #00af00; text-decoration-color: #00af00\">640</span> │ block_14_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_13_project… │\n",
       "│                     │                   │            │ block_14_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">153,600</span> │ block_14_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_15_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_15_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">8,640</span> │ block_15_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_15_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_15_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">153,600</span> │ block_15_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │        <span style=\"color: #00af00; text-decoration-color: #00af00\">640</span> │ block_15_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_add (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Add</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_14_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │                   │            │ block_15_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">153,600</span> │ block_15_add[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand_BN  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_16_expand[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand_re… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_16_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">8,640</span> │ block_16_expand_… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">DepthwiseConv2D</span>)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">3,840</span> │ block_16_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">960</span>) │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ block_16_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_project    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span>) │    <span style=\"color: #00af00; text-decoration-color: #00af00\">307,200</span> │ block_16_depthwi… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_project_BN │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span>) │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280</span> │ block_16_project… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,      │    <span style=\"color: #00af00; text-decoration-color: #00af00\">409,600</span> │ block_16_project… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv_1_bn           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,      │      <span style=\"color: #00af00; text-decoration-color: #00af00\">5,120</span> │ Conv_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]      │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ out_relu (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">ReLU</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ Conv_1_bn[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ global_average_poo… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ out_relu[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePool…</span> │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ global_average_p… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">64,050</span> │ dropout[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dropout_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ output (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)        │        <span style=\"color: #00af00; text-decoration-color: #00af00\">510</span> │ dropout_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
       "│ input_layer         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ -                 │\n",
       "│ (\u001b[38;5;33mInputLayer\u001b[0m)        │ \u001b[38;5;34m3\u001b[0m)                │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv1 (\u001b[38;5;33mConv2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m864\u001b[0m │ input_layer[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│                     │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ bn_Conv1            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m128\u001b[0m │ Conv1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv1_relu (\u001b[38;5;33mReLU\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ bn_Conv1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│                     │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m288\u001b[0m │ Conv1_relu[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]  │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m128\u001b[0m │ expanded_conv_de… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_dept… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ expanded_conv_de… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_proj… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m512\u001b[0m │ expanded_conv_de… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m16\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ expanded_conv_proj… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │         \u001b[38;5;34m64\u001b[0m │ expanded_conv_pr… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m16\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │      \u001b[38;5;34m1,536\u001b[0m │ expanded_conv_pr… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m384\u001b[0m │ block_1_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ block_1_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_pad         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m113\u001b[0m, \u001b[38;5;34m113\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ block_1_expand_r… │\n",
       "│ (\u001b[38;5;33mZeroPadding2D\u001b[0m)     │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m864\u001b[0m │ block_1_pad[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m384\u001b[0m │ block_1_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_1_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_1_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m24\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_1_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │         \u001b[38;5;34m96\u001b[0m │ block_1_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m24\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_1_project_… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m576\u001b[0m │ block_2_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_2_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,296\u001b[0m │ block_2_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m576\u001b[0m │ block_2_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_2_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_2_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m24\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │         \u001b[38;5;34m96\u001b[0m │ block_2_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m24\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_2_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_1_project_… │\n",
       "│                     │ \u001b[38;5;34m24\u001b[0m)               │            │ block_2_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_2_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m576\u001b[0m │ block_3_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_3_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_pad         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m57\u001b[0m, \u001b[38;5;34m57\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_3_expand_r… │\n",
       "│ (\u001b[38;5;33mZeroPadding2D\u001b[0m)     │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m1,296\u001b[0m │ block_3_pad[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m576\u001b[0m │ block_3_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_3_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m144\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m4,608\u001b[0m │ block_3_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_3_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m128\u001b[0m │ block_3_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m6,144\u001b[0m │ block_3_project_… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_4_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_4_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m1,728\u001b[0m │ block_4_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_4_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_4_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m6,144\u001b[0m │ block_4_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m128\u001b[0m │ block_4_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_4_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_3_project_… │\n",
       "│                     │ \u001b[38;5;34m32\u001b[0m)               │            │ block_4_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m6,144\u001b[0m │ block_4_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_5_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_5_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m1,728\u001b[0m │ block_5_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_5_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_5_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m6,144\u001b[0m │ block_5_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m128\u001b[0m │ block_5_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m32\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_5_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_4_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m… │\n",
       "│                     │ \u001b[38;5;34m32\u001b[0m)               │            │ block_5_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m6,144\u001b[0m │ block_5_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_6_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_6_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_pad         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m29\u001b[0m, \u001b[38;5;34m29\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_6_expand_r… │\n",
       "│ (\u001b[38;5;33mZeroPadding2D\u001b[0m)     │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,728\u001b[0m │ block_6_pad[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m768\u001b[0m │ block_6_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_6_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m192\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m12,288\u001b[0m │ block_6_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_6_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m256\u001b[0m │ block_6_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_6_project_… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_7_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_7_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_7_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_7_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_7_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_7_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m256\u001b[0m │ block_7_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_7_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_6_project_… │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │ block_7_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_7_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_8_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_8_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_8_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_8_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_8_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_8_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m256\u001b[0m │ block_8_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_8_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_7_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m… │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │ block_8_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_8_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand_BN   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_9_expand[\u001b[38;5;34m0\u001b[0m… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_expand_relu │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_9_expand_B… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_9_expand_r… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_9_depthwis… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_depthwise_… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_9_depthwis… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_project     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_9_depthwis… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_project_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m256\u001b[0m │ block_9_project[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_9_add (\u001b[38;5;33mAdd\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_8_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m… │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │ block_9_project_… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m24,576\u001b[0m │ block_9_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_10_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_10_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m3,456\u001b[0m │ block_10_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m1,536\u001b[0m │ block_10_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_10_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m384\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m36,864\u001b[0m │ block_10_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_10_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m384\u001b[0m │ block_10_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m55,296\u001b[0m │ block_10_project… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_11_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_11_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m5,184\u001b[0m │ block_11_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_11_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_11_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m55,296\u001b[0m │ block_11_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m384\u001b[0m │ block_11_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_11_add (\u001b[38;5;33mAdd\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_10_project… │\n",
       "│                     │ \u001b[38;5;34m96\u001b[0m)               │            │ block_11_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m55,296\u001b[0m │ block_11_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_12_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_12_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m5,184\u001b[0m │ block_12_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_12_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_12_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m55,296\u001b[0m │ block_12_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │        \u001b[38;5;34m384\u001b[0m │ block_12_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m96\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_12_add (\u001b[38;5;33mAdd\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_11_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m96\u001b[0m)               │            │ block_12_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │     \u001b[38;5;34m55,296\u001b[0m │ block_12_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,304\u001b[0m │ block_13_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_13_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_pad        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m15\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ block_13_expand_… │\n",
       "│ (\u001b[38;5;33mZeroPadding2D\u001b[0m)     │ \u001b[38;5;34m576\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m576\u001b[0m) │      \u001b[38;5;34m5,184\u001b[0m │ block_13_pad[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m576\u001b[0m) │      \u001b[38;5;34m2,304\u001b[0m │ block_13_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m576\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_13_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │     \u001b[38;5;34m92,160\u001b[0m │ block_13_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_13_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │        \u001b[38;5;34m640\u001b[0m │ block_13_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │    \u001b[38;5;34m153,600\u001b[0m │ block_13_project… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_14_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_14_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m8,640\u001b[0m │ block_14_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_14_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_14_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │    \u001b[38;5;34m153,600\u001b[0m │ block_14_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │        \u001b[38;5;34m640\u001b[0m │ block_14_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_14_add (\u001b[38;5;33mAdd\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_13_project… │\n",
       "│                     │                   │            │ block_14_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │    \u001b[38;5;34m153,600\u001b[0m │ block_14_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_15_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_15_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m8,640\u001b[0m │ block_15_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_15_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_15_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │    \u001b[38;5;34m153,600\u001b[0m │ block_15_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │        \u001b[38;5;34m640\u001b[0m │ block_15_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_15_add (\u001b[38;5;33mAdd\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m160\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_14_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │                   │            │ block_15_project… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │    \u001b[38;5;34m153,600\u001b[0m │ block_15_add[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand_BN  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_16_expand[\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_expand_re… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_16_expand_… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m8,640\u001b[0m │ block_16_expand_… │\n",
       "│ (\u001b[38;5;33mDepthwiseConv2D\u001b[0m)   │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │      \u001b[38;5;34m3,840\u001b[0m │ block_16_depthwi… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_depthwise… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m960\u001b[0m) │          \u001b[38;5;34m0\u001b[0m │ block_16_depthwi… │\n",
       "│ (\u001b[38;5;33mReLU\u001b[0m)              │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_project    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m320\u001b[0m) │    \u001b[38;5;34m307,200\u001b[0m │ block_16_depthwi… │\n",
       "│ (\u001b[38;5;33mConv2D\u001b[0m)            │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ block_16_project_BN │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m320\u001b[0m) │      \u001b[38;5;34m1,280\u001b[0m │ block_16_project… │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv_1 (\u001b[38;5;33mConv2D\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m,      │    \u001b[38;5;34m409,600\u001b[0m │ block_16_project… │\n",
       "│                     │ \u001b[38;5;34m1280\u001b[0m)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ Conv_1_bn           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m,      │      \u001b[38;5;34m5,120\u001b[0m │ Conv_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]      │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m1280\u001b[0m)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ out_relu (\u001b[38;5;33mReLU\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m,      │          \u001b[38;5;34m0\u001b[0m │ Conv_1_bn[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│                     │ \u001b[38;5;34m1280\u001b[0m)             │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ global_average_poo… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1280\u001b[0m)      │          \u001b[38;5;34m0\u001b[0m │ out_relu[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mGlobalAveragePool…\u001b[0m │                   │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout (\u001b[38;5;33mDropout\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1280\u001b[0m)      │          \u001b[38;5;34m0\u001b[0m │ global_average_p… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)        │     \u001b[38;5;34m64,050\u001b[0m │ dropout[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ dense[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ dropout_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ output (\u001b[38;5;33mDense\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)        │        \u001b[38;5;34m510\u001b[0m │ dropout_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">2,322,544</span> (8.86 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m2,322,544\u001b[0m (8.86 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">2,288,432</span> (8.73 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m2,288,432\u001b[0m (8.73 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">34,112</span> (133.25 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m34,112\u001b[0m (133.25 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from tensorflow.keras.losses import SparseCategoricalCrossentropy, CategoricalCrossentropy\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.metrics import Accuracy\n",
    "\n",
    "model = create_model(model_name='mobilenet', verbose=True)\n",
    "# model.compile(optimizer=Adam(), loss=SparseCategoricalCrossentropy(), metrics=['acc'])\n",
    "model.compile(optimizer=Adam(), loss=CategoricalCrossentropy(), metrics=['acc'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a269eceb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:12.812279Z",
     "iopub.status.busy": "2024-06-03T12:40:12.811920Z",
     "iopub.status.idle": "2024-06-03T12:40:12.819234Z",
     "shell.execute_reply": "2024-06-03T12:40:12.818546Z"
    },
    "papermill": {
     "duration": 0.041064,
     "end_time": "2024-06-03T12:40:12.821022",
     "exception": false,
     "start_time": "2024-06-03T12:40:12.779958",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.callbacks import ModelCheckpoint, ReduceLROnPlateau, EarlyStopping\n",
    "\n",
    "mcp_cb = ModelCheckpoint(\n",
    "    filepath=\"./callback_files/weights.{epoch:03d}-{val_loss:.4f}-{acc:.4f}.weights.h5\",\n",
    "    monitor='val_loss',\n",
    "    save_best_only=False,\n",
    "    save_weights_only=True,\n",
    "    mode='min'\n",
    ")\n",
    "\n",
    "rlr_cb = ReduceLROnPlateau(\n",
    "    monitor='val_loss',\n",
    "    factor=0.1,\n",
    "    patience=2,\n",
    "    mode='min'\n",
    ")\n",
    "\n",
    "ely_cb = EarlyStopping(\n",
    "    monitor='val_loss',\n",
    "    patience=4,\n",
    "    mode='min'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1ce3f4e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:40:12.881725Z",
     "iopub.status.busy": "2024-06-03T12:40:12.881448Z",
     "iopub.status.idle": "2024-06-03T12:55:34.324304Z",
     "shell.execute_reply": "2024-06-03T12:55:34.323324Z"
    },
    "papermill": {
     "duration": 921.475545,
     "end_time": "2024-06-03T12:55:34.326389",
     "exception": false,
     "start_time": "2024-06-03T12:40:12.850844",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n",
      "  self._warn_if_super_not_called()\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m  1/267\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4:52:35\u001b[0m 66s/step - acc: 0.0938 - loss: 3.3649"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "I0000 00:00:1717418479.388432     105 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n",
      "W0000 00:00:1717418479.459741     105 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m 98/267\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m2:01\u001b[0m 717ms/step - acc: 0.3142 - loss: 2.0405"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1717418549.028578     104 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 480ms/step - acc: 0.4485 - loss: 1.6387"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1717418611.422757     104 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n",
      "W0000 00:00:1717418622.890583     105 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m210s\u001b[0m 541ms/step - acc: 0.4490 - loss: 1.6373 - val_acc: 0.3222 - val_loss: 9.6134 - learning_rate: 0.0010\n",
      "Epoch 2/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m77s\u001b[0m 281ms/step - acc: 0.7558 - loss: 0.7848 - val_acc: 0.2598 - val_loss: 28.7018 - learning_rate: 0.0010\n",
      "Epoch 3/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m78s\u001b[0m 284ms/step - acc: 0.8123 - loss: 0.6193 - val_acc: 0.4340 - val_loss: 11.1965 - learning_rate: 0.0010\n",
      "Epoch 4/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m78s\u001b[0m 283ms/step - acc: 0.8609 - loss: 0.4589 - val_acc: 0.6038 - val_loss: 5.2021 - learning_rate: 1.0000e-04\n",
      "Epoch 5/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 278ms/step - acc: 0.8944 - loss: 0.3064 - val_acc: 0.7736 - val_loss: 1.7918 - learning_rate: 1.0000e-04\n",
      "Epoch 6/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 277ms/step - acc: 0.9003 - loss: 0.3385 - val_acc: 0.8882 - val_loss: 0.7697 - learning_rate: 1.0000e-04\n",
      "Epoch 7/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 277ms/step - acc: 0.9077 - loss: 0.2720 - val_acc: 0.9361 - val_loss: 0.4175 - learning_rate: 1.0000e-04\n",
      "Epoch 8/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m79s\u001b[0m 287ms/step - acc: 0.9094 - loss: 0.2705 - val_acc: 0.9507 - val_loss: 0.2121 - learning_rate: 1.0000e-04\n",
      "Epoch 9/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m78s\u001b[0m 287ms/step - acc: 0.9093 - loss: 0.2679 - val_acc: 0.9637 - val_loss: 0.1740 - learning_rate: 1.0000e-04\n",
      "Epoch 10/10\n",
      "\u001b[1m267/267\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m78s\u001b[0m 284ms/step - acc: 0.9116 - loss: 0.2543 - val_acc: 0.9565 - val_loss: 0.2367 - learning_rate: 1.0000e-04\n"
     ]
    }
   ],
   "source": [
    "N_EPOCHS = 10\n",
    "\n",
    "history = model.fit(train_dataset,\n",
    "                    batch_size=BATCH_SIZE,\n",
    "                    epochs=N_EPOCHS, \n",
    "                    validation_data=validation_dataset,\n",
    "                    callbacks=[mcp_cb, rlr_cb, ely_cb])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4570c601",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:55:34.886081Z",
     "iopub.status.busy": "2024-06-03T12:55:34.885743Z",
     "iopub.status.idle": "2024-06-03T12:55:54.375576Z",
     "shell.execute_reply": "2024-06-03T12:55:54.374676Z"
    },
    "papermill": {
     "duration": 19.757814,
     "end_time": "2024-06-03T12:55:54.377437",
     "exception": false,
     "start_time": "2024-06-03T12:55:34.619623",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m25/25\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 704ms/step - acc: 0.8466 - loss: 1.1713\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1717419354.361519     107 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[1.3482781648635864, 0.8220230340957642]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.evaluate(test_dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d46ec613",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:55:54.883753Z",
     "iopub.status.busy": "2024-06-03T12:55:54.883421Z",
     "iopub.status.idle": "2024-06-03T12:55:55.166085Z",
     "shell.execute_reply": "2024-06-03T12:55:55.165185Z"
    },
    "papermill": {
     "duration": 0.539083,
     "end_time": "2024-06-03T12:55:55.168453",
     "exception": false,
     "start_time": "2024-06-03T12:55:54.629370",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def show_history(history):\n",
    "    plt.figure(figsize=(6, 6))\n",
    "    plt.yticks(np.arange(0, 1, 0.05))\n",
    "    plt.plot(history.history['acc'], label='train')\n",
    "    plt.plot(history.history['val_acc'], label='validation')\n",
    "    plt.legend()\n",
    "    \n",
    "show_history(history)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "93f6074a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:55:55.673151Z",
     "iopub.status.busy": "2024-06-03T12:55:55.672799Z",
     "iopub.status.idle": "2024-06-03T12:56:00.538044Z",
     "shell.execute_reply": "2024-06-03T12:56:00.536835Z"
    },
    "papermill": {
     "duration": 5.120455,
     "end_time": "2024-06-03T12:56:00.540253",
     "exception": false,
     "start_time": "2024-06-03T12:55:55.419798",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5s/step\n",
      "예측 클래스: Recreational\n"
     ]
    }
   ],
   "source": [
    "# 이미지 로드 및 전처리\n",
    "\n",
    "IMAGE_PATH = '/kaggle/input/ship-classification-dataset/ships_dataset/test/Cruise/Cruise_1002.jpeg'\n",
    "IMAGE_SIZE = 224  \n",
    "\n",
    "\n",
    "class_names = ['Aircraft Carrier', 'Bulkers', 'Car Carrier', \n",
    "               'Container Ship', 'Cruise', 'DDG','Recreational',\n",
    "              'Sailboat', 'Submarine','Tug']\n",
    "\n",
    "\n",
    "image = cv2.cvtColor(cv2.imread(IMAGE_PATH), cv2.COLOR_BGR2RGB)\n",
    "resized_image = cv2.resize(image, (IMAGE_SIZE, IMAGE_SIZE))\n",
    "resized_image = np.expand_dims(resized_image, axis=0) \n",
    "resized_image = resized_image / 255.0 \n",
    "\n",
    "predictions = model.predict(resized_image, batch_size=8)\n",
    "predicted_class = np.argmax(predictions[0])\n",
    "\n",
    "\n",
    "predicted_class_name = class_names[predicted_class]\n",
    "print(f\"예측 클래스: {predicted_class_name}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b4cfcdcc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-03T12:56:01.050056Z",
     "iopub.status.busy": "2024-06-03T12:56:01.049412Z",
     "iopub.status.idle": "2024-06-03T12:56:02.313188Z",
     "shell.execute_reply": "2024-06-03T12:56:02.312351Z"
    },
    "papermill": {
     "duration": 1.523679,
     "end_time": "2024-06-03T12:56:02.319805",
     "exception": false,
     "start_time": "2024-06-03T12:56:00.796126",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x300 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import os\n",
    "import random\n",
    "import numpy as np\n",
    "import cv2\n",
    "import matplotlib.pyplot as plt\n",
    "from tensorflow.keras.models import load_model\n",
    "\n",
    "# 모델 로드 (모델이 저장된 경로에 맞게 변경해야 합니다)\n",
    "# model = load_model('/path/to/your/model.h5')\n",
    "\n",
    "IMAGE_DIR = '/kaggle/input/ship-classification-dataset/ships_dataset/test'\n",
    "IMAGE_SIZE = 224\n",
    "\n",
    "class_names = ['Aircraft Carrier', 'Bulkers', 'Car Carrier', \n",
    "               'Container Ship', 'Cruise', 'DDG', 'Recreational',\n",
    "               'Sailboat', 'Submarine', 'Tug']\n",
    "\n",
    "def load_random_images(image_dir, class_names, num_images=5):\n",
    "    # 클래스 이름들을 무작위로 섞고 그 중에서 num_images개 선택\n",
    "    selected_classes = random.sample(class_names, num_images)\n",
    "    images = []\n",
    "    labels = []\n",
    "    \n",
    "    for class_name in selected_classes:\n",
    "        class_dir = os.path.join(image_dir, class_name)\n",
    "        all_images = [os.path.join(class_dir, img) for img in os.listdir(class_dir) if img.endswith('.jpeg')]\n",
    "        \n",
    "        # 해당 클래스에서 무작위로 하나의 이미지를 선택\n",
    "        selected_image = random.choice(all_images)\n",
    "        images.append(selected_image)\n",
    "        labels.append(class_name)\n",
    "    \n",
    "    return images, labels\n",
    "\n",
    "def preprocess_image(image_path, image_size):\n",
    "    image = cv2.cvtColor(cv2.imread(image_path), cv2.COLOR_BGR2RGB)\n",
    "    resized_image = cv2.resize(image, (image_size, image_size))\n",
    "    resized_image = np.expand_dims(resized_image, axis=0)\n",
    "    resized_image = resized_image / 255.0\n",
    "    return resized_image\n",
    "\n",
    "# 무작위로 이미지 5개를 로드합니다.\n",
    "random_images, random_labels = load_random_images(IMAGE_DIR, class_names, num_images=5)\n",
    "\n",
    "# 각 이미지를 예측하고 결과를 시각화합니다.\n",
    "plt.figure(figsize=(15, 3))  # 적절한 크기로 설정합니다.\n",
    "\n",
    "for idx, image_path in enumerate(random_images):\n",
    "    preprocessed_image = preprocess_image(image_path, IMAGE_SIZE)\n",
    "    predictions = model.predict(preprocessed_image, batch_size=8)\n",
    "    predicted_class = np.argmax(predictions[0])\n",
    "    predicted_class_name = class_names[predicted_class]\n",
    "    \n",
    "    # 이미지 시각화\n",
    "    image = cv2.cvtColor(cv2.imread(image_path), cv2.COLOR_BGR2RGB)\n",
    "    plt.subplot(1, 5, idx + 1)  # 1x5 그리드로 이미지 시각화\n",
    "    plt.imshow(image)\n",
    "    plt.title(f\"Predicted: {predicted_class_name}\\nActual: {random_labels[idx]}\")\n",
    "    plt.axis('off')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0868667a",
   "metadata": {
    "papermill": {
     "duration": 0.255432,
     "end_time": "2024-06-03T12:56:02.836820",
     "exception": false,
     "start_time": "2024-06-03T12:56:02.581388",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 100 % correct!"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 3935933,
     "sourceId": 6955991,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30716,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 978.692745,
   "end_time": "2024-06-03T12:56:06.595386",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-03T12:39:47.902641",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
